{"version":3,"sources":["a-global.js","b-header.js","c-sliders.js","d-togglers.js","e-modal.js","f-catalog.js","f-mortgage.js","g-plan.js","01_main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../components/main.min.js","sourcesContent":["new NativejsSelect({\n    selector: '.m-select select',\n});\n\nlet selects = document.querySelectorAll(\".m-select\")\nif(selects){\n    selects.forEach(select => {\n        let form = select.closest(\"form\")\n        let selectOptions = form.querySelectorAll(\".nativejs-select__option\")\n        let selectValue = form.querySelectorAll(\".nativejs-select__placeholder-value\")\n        if(form){\n            let resetBtn = form.querySelector(\"button[type='reset']\")\n            resetBtn.onclick = function () {\n                selectOptions.forEach(option => {\n                    option.setAttribute(\"data-selected\",false)\n                })\n                selectValue.forEach(value => {\n                    console.log(select.getAttribute(\"data-placeholder\"))\n                    value.innerHTML = select.querySelector(\"select\").getAttribute(\"data-placeholder\")\n                })\n            }\n        }\n    })\n}\n\n\nlet tabGroups = document.querySelectorAll(\"._tabs-parent\")\n\ntabGroups.forEach(tabGroup => {\n    let tabs = tabGroup.querySelectorAll(\"._tab\")\n    let contents = tabGroup.querySelectorAll(\".tab-content\")\n\n    tabs.forEach(tab => {\n        tab.onclick = function(){\n            let tabId = tab.getAttribute(\"data-tab\")\n            tabs.forEach(tab => {\n                tab.classList.remove(\"_active\")\n            })\n            contents.forEach(content => {\n                content.classList.remove(\"_active\")\n            })\n            tab.classList.add(\"_active\")\n            tabGroup.querySelector(`.${tabId}`).classList.add(\"_active\")\n        }\n    })\n})\n\n\nlet fields = document.querySelectorAll(\".fg input\")\n\nfields.forEach(field => {\n    setLabelPosition(field)\n\n    field.onchange = ()=> {\n        setLabelPosition(field)\n    }\n\n    function setLabelPosition() {\n        if(field.value !== \"\"){\n            field.classList.add(\"_filled\")\n        } else{\n            field.classList.remove(\"_filled\")\n        }\n    }\n})\n","let burger = document.querySelector(\".burger\")\r\nlet body = document.querySelector(\"body\")\r\nlet header = document.querySelector(\".header\")\r\n\r\nif (burger) {\r\n    burger.onclick = function() {\r\n        header.classList.toggle(\"_open\")\r\n        body.classList.toggle(\"fixed-body\")\r\n    }\r\n\r\n    document.addEventListener( 'click', (e) => {\r\n        const withinBoundaries = e.composedPath().includes(header);\r\n\r\n        if ( ! withinBoundaries ) {\r\n            header.classList.remove(\"_open\")\r\n            body.classList.remove(\"fixed-body\")\r\n        }\r\n    })\r\n}\r\n\r\n\r\n","function Sliders() {\n    let SlidersArray = []\n\n    let sliders = document.querySelectorAll(\".slider\")\n    sliders.forEach((slider,index) => {\n        slider.setAttribute(\"data-slider-id\",index)\n\n        SlidersArray[index] = new Swiper(`.slider[data-slider-id=\"${index}\"] .swiper-container`, {\n            slidesPerView: \"auto\",\n            spaceBetween: 16,\n            loop: true,\n            navigation: {\n                nextEl: `.slider[data-slider-id=\"${index}\"] .swiper-button-next`,\n                prevEl: `.slider[data-slider-id=\"${index}\"] .swiper-button-prev`,\n            },\n        })\n    })\n}\n\nfunction collectionSliders() {\n    let SlidersArray = []\n\n    let sliders = document.querySelectorAll(\".collection-slider\")\n    sliders.forEach((slider,index) => {\n        slider.setAttribute(\"data-slider-id\",index)\n\n        SlidersArray[index] = new Swiper(`.collection-slider[data-slider-id=\"${index}\"] .swiper-container`, {\n            slidesPerView: \"auto\",\n            spaceBetween: 0,\n            // loop: true,\n            navigation: {\n                nextEl: `.collection-slider[data-slider-id=\"${index}\"] .swiper-button-next`,\n                prevEl: `.collection-slider[data-slider-id=\"${index}\"] .swiper-button-prev`,\n            },\n        })\n    })\n}\n\nfunction mainSlider() {\n    var swiper = new Swiper('.main-slider .swiper-container', {\n        slidesPerView: 1,\n        spaceBetween: 20,\n        pagination: {\n            el: '.main-slider .swiper-pagination',\n            type: 'bullets',\n            clickable: true,\n        },\n    })\n}\n\nfunction flatSlider() {\n    var swiper = new Swiper('.flat-slider .swiper-container', {\n        slidesPerView: 1,\n        spaceBetween: 10,\n    })\n\n    swiper.on('slideChange', function () {\n        setActiveTab(swiper.activeIndex)\n    });\n\n    let flatTabs = document.querySelectorAll(\".tab\")\n\n    flatTabs.forEach(tab => {\n        tab.onclick = function () {\n            let id = tab.getAttribute(\"data-tab\")\n            setActiveTab(id)\n            swiper.slideTo(+id)\n        }\n    })\n\n    function setActiveTab(id) {\n        flatTabs.forEach(tab => {\n            tab.classList.remove(\"_active\")\n        })\n        document.querySelector(`.flat-slider .tab[data-tab=\"${id}\"]`).classList.add(\"_active\")\n    }\n}\n\nSliders()\ncollectionSliders()\nmainSlider()\nflatSlider()\n","let toggleBlocks = document.querySelectorAll(\".slideToggle-block\")\r\ntoggleBlocks.forEach((el, i) => {\r\n    el.setAttribute(\"data-id\", i + 1)\r\n    let id = el.getAttribute(\"data-id\")\r\n    let toggleElement = document.querySelector(`[data-id=\"${id}\"] > .slideToggle-block__show`)\r\n    let animatedBlock = document.querySelector(`[data-id=\"${id}\"] > .slideToggle-block__hidden`)\r\n    let contentBlock = document.querySelector(`[data-id=\"${id}\"] > .slideToggle-block__hidden > .slideToggle-block__wrap`)\r\n    let contentBlockHeight = contentBlock.getBoundingClientRect().height\r\n    toggleElement.onclick = function() {\r\n        if (el.classList.contains(\"slideToggle-block--active\")) {\r\n            el.classList.remove(\"slideToggle-block--active\")\r\n            animatedBlock.style.height = `0px`\r\n        } else {\r\n            el.classList.add(\"slideToggle-block--active\")\r\n            animatedBlock.style.height = `${contentBlockHeight}px`\r\n            setToggleBlocksHeight()\r\n        }\r\n    }\r\n});\r\n\r\nwindow.onresize = function() {\r\n    setToggleBlocksHeight()\r\n}\r\n\r\nsetToggleBlocksHeight()\r\n\r\nfunction setToggleBlocksHeight() {\r\n    if(toggleBlocks.length===0){\r\n        return\r\n    }\r\n    let activeToggleBlocks = document.querySelectorAll(\".slideToggle-block--active\")\r\n\r\n    activeToggleBlocks.forEach(el => {\r\n        let id = el.getAttribute(\"data-id\")\r\n        let animatedBlock = document.querySelector(`[data-id=\"${id}\"] > .slideToggle-block__hidden`)\r\n        let contentBlock = document.querySelector(`[data-id=\"${id}\"] > .slideToggle-block__hidden > .slideToggle-block__wrap`)\r\n        let contentBlockHeight = contentBlock.getBoundingClientRect().height\r\n        animatedBlock.style.height = `${contentBlockHeight}px`\r\n    });\r\n}\r\n","let modalTogglers = document.querySelectorAll(\"[data-modal]\")\r\nlet modals = document.querySelectorAll(\".modal\")\r\n\r\nmodalTogglers.forEach(el => {\r\n    el.onclick = function () {\r\n        let modalId = el.getAttribute(\"data-modal\")\r\n        let modal = document.querySelector(`#${modalId}`)\r\n        let closeButtons = modal.querySelectorAll(`._close-modal`)\r\n        closeModal()\r\n\r\n        body.style.paddingRight = `${getScrollBarSize()[0]}px`\r\n        modal.classList.add(\"_active\")\r\n        body.classList.add(\"fixed-body\")\r\n\r\n        console.log(closeButtons)\r\n\r\n        closeButtons.forEach(btn => {\r\n            btn.onclick = ()=> {\r\n                body.style.paddingRight = 0\r\n                modal.classList.remove(\"_active\")\r\n                body.classList.remove(\"fixed-body\")\r\n            }\r\n        })\r\n    }\r\n})\r\n\r\n\r\n\r\nvar getScrollBarSize = (function() {\r\n    var el = window.document.createElement('textarea'), style = {\r\n        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',\r\n        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',\r\n        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'\r\n    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;\r\n\r\n    for (var key in style) {\r\n        if (style.hasOwnProperty(key)) {\r\n            el.style[key] = style[key];\r\n        }\r\n    }\r\n\r\n    return function() {\r\n        var size = null;\r\n        if (support && window.document.body) {\r\n            window.document.body.appendChild(el);\r\n            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];\r\n            window.document.body.removeChild(el);\r\n        }\r\n\r\n        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);\r\n        return size;\r\n    };\r\n})();\r\n\r\n","let flatsCatalog = document.querySelector(\".flats-catalog\")\nlet viewButtons = document.querySelectorAll(\".view__btn\")\n\n\nif(flatsCatalog){\n    viewButtons.forEach(btn => {\n        btn.onclick = function () {\n            localStorage.setItem(\"productView\", btn.getAttribute(\"data-view\"));\n            setCatalogView()\n        }\n    })\n\n    setCatalogView()\n\n    function setCatalogView() {\n        if(localStorage.getItem(\"productView\") === \"table\"){\n            flatsCatalog.classList.add(\"_table-view\")\n        } else{\n            flatsCatalog.classList.remove(\"_table-view\")\n        }\n    }\n}\n\n\nlet sortItems = document.querySelectorAll(\".sort-item\")\nlet sortInput = document.querySelector(\"._sort-input\")\n\nsortItems.forEach((sortItem,index) => {\n    sortItem.onclick = function () {\n        let value = \"\"\n        let btnName = sortItem.getAttribute(\"data-name\")\n        console.log(btnName)\n\n        sortItems.forEach((sortItem,i) => {\n            if(i === index){\n                return\n            }\n            sortItem.classList.remove(\"_asc\")\n            sortItem.classList.remove(\"_desc\")\n        })\n\n\n        if(sortItem.classList.contains(\"_desc\")){\n            sortItem.classList.remove(\"_desc\")\n            sortItem.classList.remove(\"_asc\")\n            sortInput.value = \"\"\n            return;\n        }\n        if(sortItem.classList.contains(\"_asc\")){\n            sortItem.classList.remove(\"_asc\")\n            sortItem.classList.add(\"_desc\")\n            sortInput.value = `${btnName}_desc`\n            return;\n        }\n\n        if (!sortItem.classList.contains(\"_desc\") && !sortItem.classList.contains(\"_asc\")){\n            sortItem.classList.add(\"_asc\")\n            sortInput.value = `${btnName}_asc`\n            return;\n        }\n    }\n})\n\n\nfunction digits_int(target){\n    let val = target.value.replace(/[^0-9]/g, '');\n    let min = +target.getAttribute(\"min\")\n    let max = +target.getAttribute(\"max\")\n\n\n    if(val){\n        if (+val < min) {\n            val = min\n            val = replaceNumericInputs(val)\n            target.value = val\n            return\n        }\n        if (+val > max) {\n            val = max\n            val = replaceNumericInputs(val)\n            target.value = val\n            return\n        }\n    }\n\n    target.value = replaceNumericInputs(val)\n}\n\nlet numberInputs = document.querySelectorAll(\"._num-input\")\nnumberInputs.forEach(input => {\n    digits_int(input)\n\n    input.onchange = function () {\n\n    }\n})\n\n\nfunction replaceNumericInputs(val) {\n    return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\n}\n","let mortgageForm = document.querySelector(\".mortgage-calc\")\n\nif(mortgageForm){\n    let creditSumField = mortgageForm.querySelector(\"input[name='credit-sum']\")\n    let firstPayField = mortgageForm.querySelector(\"input[name='first-pay']\")\n    let creditDurationField = mortgageForm.querySelector(\"input[name='duration']\")\n\n    let creditSum = +creditSumField.value.replace(/\\s/g, '')\n    firstPayField.setAttribute(\"min\",creditSum * 0.1)\n    firstPayField.setAttribute(\"max\",creditSum * 0.95)\n    firstPayField.value = creditSum * 0.1\n\n    let sumOutput = mortgageForm.querySelector(\"._credit-sum-output\")\n    let monthSumOutput = mortgageForm.querySelector(\"._month-sum-output\")\n\n    digits_int(firstPayField)\n    calcMortgage()\n\n    firstPayField.onchange = function () {\n        digits_int(this)\n        calcMortgage()\n    }\n    creditDurationField.onchange = function () {\n        digits_int(this)\n        calcMortgage()\n    }\n    function calcMortgage() {\n        let firstPay = +firstPayField.value.replace(/\\s/g, '')\n        let duration = +creditDurationField.value.replace(/\\s/g, '')\n\n        console.log(firstPay)\n        console.log(duration)\n\n        if(firstPay > 0 && duration > 0){\n            let durationMonth = duration * 12\n\n            let yearRate = 10.69\n            let monthRate = yearRate / 12 / 100\n            let generalRate = (1 + monthRate)**durationMonth\n\n            let sum = (creditSum * monthRate * generalRate) / (generalRate - 1)\n\n            sumOutput.innerHTML = replaceNumericInputs((creditSum - firstPay).toFixed(0))\n            monthSumOutput.innerHTML = replaceNumericInputs(sum.toFixed(0))\n            mortgageForm.classList.add(\"_calculated\")\n        }\n\n\n    }\n}\n\n\n\n\n","function initFlats(map_points){\n    map_points.forEach(point => {\n        let flats = ``\n        let planHtml = document.querySelector(\".plan\")\n\n\n\n        point.flats.forEach(flat => {\n            let price = ``\n            if(flat.price > 0){\n                price = `\n            <span class=\"text16 dark-text\">\n                от ${(Math.abs(Number(flat.price)) / 1.0e+6).toFixed(1)} млн. ₽\n            </span>\n            `\n            } else{\n                price = `\n            <span class=\"text16 gray-text\">\n                Нет в наличии\n            </span>\n            `\n            }\n            flats += `\n        <a href=\"${flat.link}\" class=\"room\">\n            <div class=\"text16 medium-text\">\n                ${flat.name}\n            </div>\n            <div class=\"room__right\">\n                ${price}\n                <button class=\"room__btn\">\n                    <img src=\"img/btn.svg\" alt=\"\">\n                </button>\n            </div>\n        </a>\n\n        `\n        })\n\n        planHtml.innerHTML += `\n    <div class=\"plan-modal\" data-num=\"${point.corpus_id}\">\n        <div class=\"plan-modal__wrap\">\n            <div class=\"plan-modal__top\">\n                <div class=\"text40 medium-text\">\n                    Корпус ${point.corpus_id}\n                </div>\n                <button class=\"plan-modal__close\">\n                    <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M18.6667 8L20 9.33333L9.33333 20L8 18.6667L18.6667 8Z\" fill=\"#A7A9AC\"/>\n                        <path d=\"M20 18.6667L18.6667 20L8 9.33333L9.33333 8L20 18.6667Z\" fill=\"#A7A9AC\"/>\n                    </svg>\n                </button>\n            </div>\n            <div class=\"plan-modal__items\">\n                ${flats}\n            </div>\n            <div class=\"plan-modal__bottom\">\n                <a href=\"\" class=\"plan-modal__btn m-btn m-btn-primary\">\n                    ${point.flats_count} квартиры\n                </a>\n            </div>\n        </div>\n        <div class=\"plan-modal__bg\"></div>\n    </div>\n    `\n    })\n\n    let planPoints = document.querySelectorAll(\".plan-point\")\n    let planLights = document.querySelectorAll(\".plan__lighting path\")\n    let planModals = document.querySelectorAll(\".plan-modal\")\n\n    if(planPoints){\n        planPoints.forEach(point => {\n            point.onmouseover = function () {\n                let num = point.getAttribute(\"data-num\")\n\n                planLights.forEach(light => {\n                    let lightNum = light.getAttribute(\"data-num\")\n                    light.classList.remove(\"_active\")\n                    if(num === lightNum){\n                        light.classList.add(\"_active\")\n                    }\n                })\n            }\n            point.onclick = function () {\n                let num = point.getAttribute(\"data-num\")\n                if(num === \"school\"){\n                    return\n                }\n                console.log(document.querySelector(`.plan-modal[data-num=\"${num}\"]`))\n                document.querySelector(`.plan-modal[data-num=\"${num}\"]`).classList.add(\"_active\")\n\n\n            }\n        })\n\n        planModals.forEach(modal => {\n            let closeBtn = modal.querySelector(\".plan-modal__close\")\n            let closeBg = modal.querySelector(\".plan-modal__bg\")\n\n            closeBtn.onclick = function(){\n                closeModal(modal)\n            }\n            closeBg.onclick = function(){\n                closeModal(modal)\n            }\n        })\n\n        function closeModal(modal) {\n            planLights.forEach(light => {\n                modal.classList.remove(\"_active\")\n                light.classList.remove(\"_active\")\n            })\n        }\n    }\n}\n\n\n","window.addEventListener('DOMContentLoaded', () => {\n    fix100vh();\n    window.addEventListener('resize', () => {\n        fix100vh();\n        getScrollBarSize()\n    })\n\n    getScrollBarSize()\n\n\n})\n\nfunction fix100vh() {\n    let vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n}\n"]}