new NativejsSelect({
    selector: '.m-select select',
});


let tabGroups = document.querySelectorAll("._tabs-parent")

tabGroups.forEach(tabGroup => {
    let tabs = tabGroup.querySelectorAll("._tab")
    let contents = tabGroup.querySelectorAll(".tab-content")

    tabs.forEach(tab => {
        tab.onclick = function(){
            let tabId = tab.getAttribute("data-tab")
            tabs.forEach(tab => {
                tab.classList.remove("_active")
            })
            contents.forEach(content => {
                content.classList.remove("_active")
            })
            tab.classList.add("_active")
            tabGroup.querySelector(`.${tabId}`).classList.add("_active")
        }
    })
})


let fields = document.querySelectorAll(".fg input")

fields.forEach(field => {
    setLabelPosition(field)

    field.onchange = ()=> {
        setLabelPosition(field)
    }

    function setLabelPosition() {
        if(field.value !== ""){
            field.classList.add("_filled")
        } else{
            field.classList.remove("_filled")
        }
    }
})

let burger = document.querySelector(".burger")
let body = document.querySelector("body")
let header = document.querySelector(".header")

if (burger) {
    burger.onclick = function() {
        header.classList.toggle("_open")
        body.classList.toggle("fixed-body")
    }

    document.addEventListener( 'click', (e) => {
        const withinBoundaries = e.composedPath().includes(header);

        if ( ! withinBoundaries ) {
            header.classList.remove("_open")
            body.classList.remove("fixed-body")
        }
    })
}



function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 16,
            loop: true,
            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
        })
    })
}

function collectionSliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".collection-slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.collection-slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            // loop: true,
            navigation: {
                nextEl: `.collection-slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.collection-slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
        })
    })
}

function mainSlider() {
    var swiper = new Swiper('.main-slider .swiper-container', {
        slidesPerView: 1,
        spaceBetween: 20,
        pagination: {
            el: '.main-slider .swiper-pagination',
            type: 'bullets',
            clickable: true,
        },
    })
}

Sliders()
collectionSliders()
mainSlider()

let toggleBlocks = document.querySelectorAll(".slideToggle-block")
toggleBlocks.forEach((el, i) => {
    el.setAttribute("data-id", i + 1)
    let id = el.getAttribute("data-id")
    let toggleElement = document.querySelector(`[data-id="${id}"] > .slideToggle-block__show`)
    let animatedBlock = document.querySelector(`[data-id="${id}"] > .slideToggle-block__hidden`)
    let contentBlock = document.querySelector(`[data-id="${id}"] > .slideToggle-block__hidden > .slideToggle-block__wrap`)
    let contentBlockHeight = contentBlock.getBoundingClientRect().height
    toggleElement.onclick = function() {
        if (el.classList.contains("slideToggle-block--active")) {
            el.classList.remove("slideToggle-block--active")
            animatedBlock.style.height = `0px`
        } else {
            el.classList.add("slideToggle-block--active")
            animatedBlock.style.height = `${contentBlockHeight}px`
            setToggleBlocksHeight()
        }
    }
});

window.onresize = function() {
    setToggleBlocksHeight()
}

setToggleBlocksHeight()

function setToggleBlocksHeight() {
    if(toggleBlocks.length===0){
        return
    }
    let activeToggleBlocks = document.querySelectorAll(".slideToggle-block--active")

    activeToggleBlocks.forEach(el => {
        let id = el.getAttribute("data-id")
        let animatedBlock = document.querySelector(`[data-id="${id}"] > .slideToggle-block__hidden`)
        let contentBlock = document.querySelector(`[data-id="${id}"] > .slideToggle-block__hidden > .slideToggle-block__wrap`)
        let contentBlockHeight = contentBlock.getBoundingClientRect().height
        animatedBlock.style.height = `${contentBlockHeight}px`
    });
}

let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        let modal = document.querySelector(`#${modalId}`)
        let closeButtons = modal.querySelectorAll(`._close-modal`)
        closeModal()

        body.style.paddingRight = `${getScrollBarSize()[0]}px`
        modal.classList.add("_active")
        body.classList.add("fixed-body")

        console.log(closeButtons)

        closeButtons.forEach(btn => {
            btn.onclick = ()=> {
                body.style.paddingRight = 0
                modal.classList.remove("_active")
                body.classList.remove("fixed-body")
            }
        })
    }
})



var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


let flatsCatalog = document.querySelector(".flats-catalog")
let viewButtons = document.querySelectorAll(".view__btn")


if(flatsCatalog){
    viewButtons.forEach(btn => {
        btn.onclick = function () {
            localStorage.setItem("productView", btn.getAttribute("data-view"));
            setCatalogView()
        }
    })

    setCatalogView()

    function setCatalogView() {
        if(localStorage.getItem("productView") === "table"){
            flatsCatalog.classList.add("_table-view")
        } else{
            flatsCatalog.classList.remove("_table-view")
        }
    }
}


let sortItems = document.querySelectorAll(".sort-item")
let sortInput = document.querySelector("._sort-input")

sortItems.forEach((sortItem,index) => {
    sortItem.onclick = function () {
        let value = ""
        let btnName = sortItem.getAttribute("data-name")
        console.log(btnName)

        sortItems.forEach((sortItem,i) => {
            if(i === index){
                return
            }
            sortItem.classList.remove("_asc")
            sortItem.classList.remove("_desc")
        })


        if(sortItem.classList.contains("_desc")){
            sortItem.classList.remove("_desc")
            sortItem.classList.remove("_asc")
            sortInput.value = ""
            return;
        }
        if(sortItem.classList.contains("_asc")){
            sortItem.classList.remove("_asc")
            sortItem.classList.add("_desc")
            sortInput.value = `${btnName}_desc`
            return;
        }

        if (!sortItem.classList.contains("_desc") && !sortItem.classList.contains("_asc")){
            sortItem.classList.add("_asc")
            sortInput.value = `${btnName}_asc`
            return;
        }
    }
})

let planPoints = document.querySelectorAll(".plan-point")
let planLights = document.querySelectorAll(".plan__lighting path")
let planModals = document.querySelectorAll(".plan-modal")

if(planPoints){
    planPoints.forEach(point => {
        point.onmouseover = function () {
            let num = point.getAttribute("data-num")

            planLights.forEach(light => {
                let lightNum = light.getAttribute("data-num")
                light.classList.remove("_active")
                if(num === lightNum){
                    light.classList.add("_active")
                }
            })
        }
        point.onclick = function () {
            let num = point.getAttribute("data-num")
            console.log(document.querySelector(`.plan-modal[data-num="${num}"]`))
            document.querySelector(`.plan-modal[data-num="${num}"]`).classList.add("_active")


        }
    })

    planModals.forEach(modal => {
        let closeBtn = modal.querySelector(".plan-modal__close")
        let closeBg = modal.querySelector(".plan-modal__bg")

        closeBtn.onclick = function(){
            closeModal(modal)
        }
        closeBg.onclick = function(){
            closeModal(modal)
        }
    })

    function closeModal(modal) {
        planLights.forEach(light => {
            modal.classList.remove("_active")
            light.classList.remove("_active")
        })
    }
}


window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()
})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
